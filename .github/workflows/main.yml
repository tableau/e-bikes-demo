# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on:
  push:
    branches: ["anyoung/heroku"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - name: Deploy to Heroku (testing 21)
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: "e-bikes-demo-tc2024"
          DEPLOY_PATH: "../deploy-demo"
        run: |
          rm -rf $DEPLOY_PATH
          mkdir $DEPLOY_PATH
          mkdir $DEPLOY_PATH/src
          mkdir $DEPLOY_PATH/src/db
          mkdir $DEPLOY_PATH/src/server
          mv prod-package.json $DEPLOY_PATH/package.json
          rm -rf dist/data
          cp -a dist/. $DEPLOY_PATH/dist
          cp -a src/db/. $DEPLOY_PATH/src/db
          cp -a src/server/. $DEPLOY_PATH/src/server
          cd $DEPLOY_PATH
          git init
          git config --global user.email "devplat.heroku@salesforce.com"
          git config --global user.name "DevPlat Heroku"
          git add .
          git commit -m "Production deploy commit"
          git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
          git push -f heroku HEAD:master
